import type { Metadata as NextMetadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { getTokens, Tokens } from "next-firebase-auth-edge";
import { serverConfig } from "@/config/firebase/server-config";
import { cookies } from "next/headers";
import { toUser } from "@/common/auth/user";
import { AuthProvider } from "@/common/auth/AuthProvider";
import { Metadata } from "@/common/auth/AuthContext";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: NextMetadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const tokens = await getTokens(await cookies(), {
    apiKey: serverConfig.apiKey,
    cookieName: serverConfig.cookieName,
    cookieSignatureKeys: serverConfig.cookieSignatureKeys,
    serviceAccount: {
      projectId: serverConfig.projectId,
      clientEmail: serverConfig.clientEmail,
      privateKey: serverConfig.privateKey,
    },
  });

  const user = tokens ? toUser(tokens as Tokens<Metadata>) : null;

  return (
    <AuthProvider user={user}>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          {children}
        </body>
      </html>
    </AuthProvider>
  );
}
